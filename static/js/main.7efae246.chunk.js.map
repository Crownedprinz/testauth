{"version":3,"sources":["index.js"],"names":["User","props","Object","_Users_skersch_Documents_myfork_googleauth_website_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","console","log","_Users_skersch_Documents_myfork_googleauth_website_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_skersch_Documents_myfork_googleauth_website_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","undefined","value","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","data","name","React","Component","Demo","_this","state","user","setupStitch","appName","stitchClient","Stitch","hasAppClient","defaultAppClient","initializeDefaultAppClient","auth","hasRedirectResult","handleRedirectResult","then","isLoggedIn","profile","userState","setState","credential","GoogleRedirectCredential","loginWithRedirect","ReactDOM","render","document","getElementById"],"mappings":"8NAMMA,cAEJ,SAAAA,EAAYC,GAAO,OAACC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAClBK,QAAQC,IAAI,oBADKJ,OAAAK,EAAA,EAAAL,CAAAE,KAAAF,OAAAM,EAAA,EAAAN,CAAAF,GAAAS,KAAAL,KAEXH,sFAINI,QAAQC,IAAI,gEAMZ,OADAD,QAAQC,IAAI,eACWI,IAAnBN,KAAKH,MAAMU,MAA0B,KAClCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOX,KAAKH,MAAMU,MAAMK,KAAKC,cAhBrCC,IAAMC,WAoBnBC,cAEJ,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,GACjBf,QAAQC,IAAI,qBACZe,EAAAnB,OAAAK,EAAA,EAAAL,CAAAE,KAAAF,OAAAM,EAAA,EAAAN,CAAAkB,GAAAX,KAAAL,KAAMH,KACDqB,MAAQ,CACXC,KAAM,IAJSF,mFASjBjB,KAAKoB,cACLnB,QAAQC,IAAI,qEAIZD,QAAQC,IAAI,uBACZ,IAAMmB,EAAU,4BACVC,EAAeC,IAAOC,aAAaH,GAAWE,IAAOE,iBAAmBF,IAAOG,2BAA2BL,GAOhH,GALIC,EAAaK,KAAKC,qBAClBN,EAAaK,KAAKE,uBAAuBC,KAAK,SAAAX,GAC9ClB,QAAQC,IAAIiB,KAGXG,EAAaK,KAAKI,WAGhB,CACJ9B,QAAQC,IAAI,2BACZD,QAAQC,IAAIoB,EAAaK,KAAKR,KAAKa,SACnC,IAAIC,EAAY,GAChBA,EAAU,GAAKX,EAAaK,KAAKR,KAAKa,QACtC/B,QAAQC,IAAI+B,GACZjC,KAAKkC,SAAS,CACXf,KAAMc,QAVuB,CACjC,IAAME,EAAa,IAAIC,IACvBb,IAAOE,iBAAiBE,KAAKU,kBAAkBF,sCAcjD,OAAInC,KAAKkB,MAAMC,OAAS,IACtBlB,QAAQC,IAAI,gBACL,KAETD,QAAQC,IAAI,oBACLF,KAAKkB,MAAMC,mDAIlBlB,QAAQC,IAAI,sDAIZ,YAA2BI,IAAvBN,KAAKkB,MAAMC,KAAK,GACX,KAGPX,EAAAC,EAAAC,cAACd,EAAD,CAAMW,MAAOP,KAAKkB,MAAMC,KAAK,YA1DhBL,IAAMC,WAiEzBuB,IAASC,OACP/B,EAAAC,EAAAC,cAACM,EAAD,MACAwB,SAASC,eAAe","file":"static/js/main.7efae246.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Stitch, GoogleRedirectCredential } from \"mongodb-stitch-browser-sdk\";\n\nclass User extends React.Component {\n\n  constructor(props) {\n    console.log(\"call constructor\");\n    super(props);\n  }\n\n  componentDidUpdate() {\n    console.log(\"Formatted component updated\");\n  }\n\n\n  render() {\n    console.log(\"render\");\n    if (this.props.value===undefined) return null;\n    return <div className=\"formatted\">\n            <pre className=\"pre\">{this.props.value.data.name}</pre>\n            </div>\n  }\n}\nclass Demo extends React.Component {\n\n  constructor(props) {\n    console.log(\"call constructor\");\n    super(props);\n    this.state = { \n      user: [],\n    }\n  }\n\n  componentDidMount() {\n    this.setupStitch();\n    console.log(\"component Did mount running\");\n  }\n\n  setupStitch() {\n    console.log(\"setup stitch latest\");\n    const appName = 'authentication_test-htbrq';\n    const stitchClient = Stitch.hasAppClient(appName) ? Stitch.defaultAppClient : Stitch.initializeDefaultAppClient(appName);\n    \n    if (stitchClient.auth.hasRedirectResult()) {\n        stitchClient.auth.handleRedirectResult().then(user => {\n        console.log(user);\n    })}\n\n    if (!stitchClient.auth.isLoggedIn) {\n      const credential = new GoogleRedirectCredential();\n      Stitch.defaultAppClient.auth.loginWithRedirect(credential);\n    } else {\n       console.log(\"stitch client logged in\");\n       console.log(stitchClient.auth.user.profile);\n       var userState = [];\n       userState[0] = stitchClient.auth.user.profile;\n       console.log(userState);\n       this.setState({\n          user: userState,\n       });\n    }\n  }\n\n  getUser() {\n    if (this.state.user === []) {\n      console.log(\"User is null\");\n      return {};\n    }\n    console.log(\"user is not null\");\n    return this.state.user;\n  }\n\n  componentDidUpdate() {\n    console.log(\"component updated\");\n  }\n\n  render() {\n    if (this.state.user[0] === undefined) {\n      return null;\n    }\n    return (\n      <User value={this.state.user[0]}/>\n    )\n  }\n}\n\n// ========================================\n   \nReactDOM.render(\n  <Demo />,\n  document.getElementById('root')\n);"],"sourceRoot":""}